{"version":3,"file":"safeUserApi.js","sources":["api/safeUserApi.js"],"sourcesContent":["/**\n * 安全用户API调用包装器\n * 自动处理错误，避免每次调用API都写try-catch\n */\n\nimport { createSafeApi } from '@/utils/errorHandler.js';\nimport { userApi } from './userApi.js';\n\n// 安全的用户API\nexport const safeUserApi = createSafeApi(userApi, {\n    // 默认配置\n    showError: true,\n    errorMsg: '操作失败',\n    loading: false, // 用户操作一般不需要全局loading\n    onError: (error) => {\n      console.error('用户API错误:', error);\n      // 这里可以添加其他错误处理逻辑，如错误上报\n    }\n  });\n  \n  // 特殊配置的登录API\n  export const safeLoginApi = {\n    login: (loginData, options = {}) => {\n      return createSafeApi(userApi, {\n        showError: true,\n        errorMsg: '登录失败',\n        loading: true,\n        loadingText: '登录中...',\n        onError: (error) => {\n          console.error('登录API错误:', error);\n        }\n      }).login(loginData, options);\n    }\n  };"],"names":["createSafeApi","userApi","uni"],"mappings":";;;;AASY,MAAC,cAAcA,mBAAa,cAACC,qBAAS;AAAA;AAAA,EAE9C,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA;AAAA,EACT,SAAS,CAAC,UAAU;AAClBC,mEAAc,YAAY,KAAK;AAAA,EAEhC;AACL,CAAG;AAGW,MAAC,eAAe;AAAA,EAC1B,OAAO,CAAC,WAAW,UAAU,OAAO;AAClC,WAAOF,mBAAAA,cAAcC,YAAAA,SAAS;AAAA,MAC5B,WAAW;AAAA,MACX,UAAU;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,MACb,SAAS,CAAC,UAAU;AAClBC,sBAAA,MAAA,MAAA,SAAA,4BAAc,YAAY,KAAK;AAAA,MAChC;AAAA,IACF,CAAA,EAAE,MAAM,WAAW,OAAO;AAAA,EAC5B;AACL;;;"}