{"version":3,"file":"safeUserApi.js","sources":["api/safeUserApi.js"],"sourcesContent":["/**\r\n * 安全用户API调用包装器\r\n * 自动处理错误，避免每次调用API都写try-catch\r\n */\r\n\r\nimport { createSafeApi } from '@/utils/errorHandler.js';\r\nimport { userApi } from './userApi.js';\r\n\r\n// 安全的用户API\r\nexport const safeUserApi = createSafeApi(userApi, {\r\n    // 默认配置\r\n    showError: true,\r\n    errorMsg: '操作失败',\r\n    loading: false, // 用户操作一般不需要全局loading\r\n    onError: (error) => {\r\n      console.error('用户API错误:', error);\r\n      // 这里可以添加其他错误处理逻辑，如错误上报\r\n    }\r\n  });\r\n  \r\n  // 特殊配置的登录API\r\n  export const safeLoginApi = {\r\n    login: (loginData, options = {}) => {\r\n      return createSafeApi(userApi, {\r\n        showError: true,\r\n        errorMsg: '登录失败',\r\n        loading: true,\r\n        loadingText: '登录中...',\r\n        onError: (error) => {\r\n          console.error('登录API错误:', error);\r\n        }\r\n      }).login(loginData, options);\r\n    }\r\n  };"],"names":["createSafeApi","userApi","uni"],"mappings":";;;;AASY,MAAC,cAAcA,mBAAa,cAACC,qBAAS;AAAA;AAAA,EAE9C,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA;AAAA,EACT,SAAS,CAAC,UAAU;AAClBC,mEAAc,YAAY,KAAK;AAAA,EAEhC;AACL,CAAG;AAGW,MAAC,eAAe;AAAA,EAC1B,OAAO,CAAC,WAAW,UAAU,OAAO;AAClC,WAAOF,mBAAAA,cAAcC,YAAAA,SAAS;AAAA,MAC5B,WAAW;AAAA,MACX,UAAU;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,MACb,SAAS,CAAC,UAAU;AAClBC,sBAAA,MAAA,MAAA,SAAA,4BAAc,YAAY,KAAK;AAAA,MAChC;AAAA,IACF,CAAA,EAAE,MAAM,WAAW,OAAO;AAAA,EAC5B;AACL;;;"}