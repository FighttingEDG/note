{"version":3,"file":"errorHandler.js","sources":["utils/errorHandler.js"],"sourcesContent":["/**\r\n * 全局错误处理工具\r\n * 用于包装API调用，避免每次都写try-catch\r\n */\r\n\r\n/**\r\n * 包装异步函数调用，统一处理错误\r\n * @param {Function} asyncFunc - 异步函数\r\n * @param {Object} options - 配置选项\r\n * @param {Boolean} options.showError - 是否显示错误提示，默认为true\r\n * @param {String} options.errorMsg - 自定义错误提示\r\n * @param {Function} options.onError - 错误回调函数\r\n * @param {Function} options.onSuccess - 成功回调函数\r\n * @param {Boolean} options.rethrow - 是否重新抛出错误，默认为false\r\n * @returns {Promise} 处理后的Promise\r\n */\r\nexport const handleAsync = async (asyncFunc, options = {}) => {\r\n  const {\r\n    showError = true,\r\n    errorMsg = '操作失败',\r\n    onError,\r\n    onSuccess,\r\n    rethrow = false,\r\n    loading = false,\r\n    loadingText = '加载中...',\r\n  } = options;\r\n  \r\n  try {\r\n    // 显示加载提示\r\n    if (loading) {\r\n      uni.showLoading({\r\n        title: loadingText,\r\n        mask: true\r\n      });\r\n    }\r\n    \r\n    // 执行异步函数\r\n    const result = await asyncFunc();\r\n    \r\n    // 隐藏加载提示\r\n    if (loading) {\r\n      uni.hideLoading();\r\n    }\r\n    \r\n    // 调用成功回调\r\n    if (typeof onSuccess === 'function') {\r\n      onSuccess(result);\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    // 隐藏加载提示\r\n    if (loading) {\r\n      uni.hideLoading();\r\n    }\r\n    \r\n    // 显示错误提示\r\n    if (showError && !error.handled) {\r\n      // 优先使用后端返回的错误信息\r\n      const errorMessage = error.message || errorMsg;\r\n      uni.showToast({\r\n        title: errorMessage,\r\n        icon: 'none'\r\n      });\r\n      \r\n      // 标记错误已显示提示\r\n      error.handled = true;\r\n    }\r\n    \r\n    // 调用错误回调\r\n    if (typeof onError === 'function') {\r\n      onError(error);\r\n    }\r\n    \r\n    // 是否重新抛出错误\r\n    if (rethrow) {\r\n      throw error;\r\n    }\r\n    \r\n    // 返回null表示操作失败\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建一个包装后的API对象，所有方法都自动处理错误\r\n * @param {Object} api - 原始API对象\r\n * @param {Object} defaultOptions - 默认配置选项\r\n * @returns {Object} 包装后的API对象\r\n */\r\nexport const createSafeApi = (api, defaultOptions = {}) => {\r\n  const safeApi = {};\r\n  \r\n  for (const key in api) {\r\n    if (typeof api[key] === 'function') {\r\n      safeApi[key] = (...args) => {\r\n        // 检查最后一个参数是否为选项对象（自定义handleAsync选项）\r\n        const lastArg = args[args.length - 1];\r\n        const hasOptions = lastArg && typeof lastArg === 'object' && \r\n                          !Array.isArray(lastArg) && \r\n                          !(lastArg instanceof Date) &&\r\n                          (lastArg.showError !== undefined || \r\n                           lastArg.errorMsg !== undefined || \r\n                           lastArg.onError !== undefined || \r\n                           lastArg.onSuccess !== undefined || \r\n                           lastArg.rethrow !== undefined || \r\n                           lastArg.loading !== undefined || \r\n                           lastArg.loadingText !== undefined);\r\n        \r\n        if (hasOptions && args.length > 0) {\r\n          // 如果最后一个参数是handleAsync选项对象，则从参数中移除\r\n          const apiArgs = args.slice(0, -1);\r\n          const customOptions = args[args.length - 1];\r\n          \r\n          // 合并默认选项和自定义选项\r\n          const mergedOptions = { ...defaultOptions, ...customOptions };\r\n          \r\n          return handleAsync(() => api[key](...apiArgs), mergedOptions);\r\n        } else {\r\n          // 否则使用默认选项，将所有参数传递给原始API\r\n          return handleAsync(() => api[key](...args), defaultOptions);\r\n        }\r\n      };\r\n    } else {\r\n      safeApi[key] = api[key];\r\n    }\r\n  }\r\n  \r\n  return safeApi;\r\n};"],"names":["uni"],"mappings":";;AAgBY,MAAC,cAAc,OAAO,WAAW,UAAU,OAAO;AAC5D,QAAM;AAAA,IACJ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV,UAAU;AAAA,IACV,cAAc;AAAA,EACf,IAAG;AAEJ,MAAI;AAEF,QAAI,SAAS;AACXA,oBAAAA,MAAI,YAAY;AAAA,QACd,OAAO;AAAA,QACP,MAAM;AAAA,MACd,CAAO;AAAA,IACF;AAGD,UAAM,SAAS,MAAM;AAGrB,QAAI,SAAS;AACXA,oBAAG,MAAC,YAAW;AAAA,IAChB;AAGD,QAAI,OAAO,cAAc,YAAY;AACnC,gBAAU,MAAM;AAAA,IACjB;AAED,WAAO;AAAA,EACR,SAAQ,OAAO;AAEd,QAAI,SAAS;AACXA,oBAAG,MAAC,YAAW;AAAA,IAChB;AAGD,QAAI,aAAa,CAAC,MAAM,SAAS;AAE/B,YAAM,eAAe,MAAM,WAAW;AACtCA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,MACd,CAAO;AAGD,YAAM,UAAU;AAAA,IACjB;AAGD,QAAI,OAAO,YAAY,YAAY;AACjC,cAAQ,KAAK;AAAA,IACd;AAGD,QAAI,SAAS;AACX,YAAM;AAAA,IACP;AAGD,WAAO;AAAA,EACR;AACH;AAQY,MAAC,gBAAgB,CAAC,KAAK,iBAAiB,OAAO;AACzD,QAAM,UAAU,CAAA;AAEhB,aAAW,OAAO,KAAK;AACrB,QAAI,OAAO,IAAI,GAAG,MAAM,YAAY;AAClC,cAAQ,GAAG,IAAI,IAAI,SAAS;AAE1B,cAAM,UAAU,KAAK,KAAK,SAAS,CAAC;AACpC,cAAM,aAAa,WAAW,OAAO,YAAY,YAC/B,CAAC,MAAM,QAAQ,OAAO,KACtB,EAAE,mBAAmB,UACpB,QAAQ,cAAc,UACtB,QAAQ,aAAa,UACrB,QAAQ,YAAY,UACpB,QAAQ,cAAc,UACtB,QAAQ,YAAY,UACpB,QAAQ,YAAY,UACpB,QAAQ,gBAAgB;AAE3C,YAAI,cAAc,KAAK,SAAS,GAAG;AAEjC,gBAAM,UAAU,KAAK,MAAM,GAAG,EAAE;AAChC,gBAAM,gBAAgB,KAAK,KAAK,SAAS,CAAC;AAG1C,gBAAM,gBAAgB,EAAE,GAAG,gBAAgB,GAAG,cAAa;AAE3D,iBAAO,YAAY,MAAM,IAAI,GAAG,EAAE,GAAG,OAAO,GAAG,aAAa;AAAA,QACtE,OAAe;AAEL,iBAAO,YAAY,MAAM,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,cAAc;AAAA,QAC3D;AAAA,MACT;AAAA,IACA,OAAW;AACL,cAAQ,GAAG,IAAI,IAAI,GAAG;AAAA,IACvB;AAAA,EACF;AAED,SAAO;AACT;;;"}